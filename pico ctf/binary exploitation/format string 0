# Format String 0

**FLAG**: `picoCTF{7h3_cu570m3r_15_n3v3r_SEGFAULT_dc0f36c4}`

## Approach
This challenge was actually slight confusing to me at first, so i still have to do a little research on it. At first the hint said to try all the options so that's exactly what i did, but then on further trying to understand what was to be done, i got to know from the source code that the code would have executed if the count size was greater than 64(as bufsize was set to 32 and count was supposed to be greater than 2*32). Hence i inputted gr%114dcheese as it has a '%' symbol meaning whatever is after it acts as an access specifier, numbers before d implies it is 114 chaacters long(read in a book about c). 
Then i tried all the other options successively till i got my flag. 
“Cla%sic_Che%s%steak” was the one that worked because %s expects a string argument. %steak is not valid, but %s still tries to process it. When printf processes %s without a corresponding string argument, it can access arbitrary memory or cause the program to crash.

##

## Wrong Approaches
tried inputting random values > 64 in order to bypass the first function as I did not remember %114d.
##

## References
https://www.youtube.com/watch?v=2HxyGWD1htg
##

#
